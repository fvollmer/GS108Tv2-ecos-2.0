// eCos memory layout - Fri Oct 20 06:11:28 2000

// This is a generated file - do not edit

#include <cyg/infra/cyg_type.inc>

MEMORY
{
#ifdef BCM_ROBO_SUPPORT
    ram : ORIGIN = 0x80001000, LENGTH = (RAM_SIZE-0x21000) 
    ramfs : ORIGIN = (0xA0000000|(RAM_SIZE-0x20000)), LENGTH = 0x20000
#else
    ram : ORIGIN = 0x80041000, LENGTH = (RAM_SIZE-0x41000)
    ramfs : ORIGIN = 0xA0001000, LENGTH = 0x40000
#endif
}

SECTIONS
{
    SECTIONS_BEGIN
#ifdef BCM_ROBO_SUPPORT
    SECTION_rom_vectors (ram, 0x80001000, LMA_EQ_VMA)
#else
    SECTION_rom_vectors (ram, 0x80041000, LMA_EQ_VMA)
#endif
    SECTION_ROMISC (ram, ALIGN (0x4), LMA_EQ_VMA)
    SECTION_RELOCS (ram, ALIGN (0x4), LMA_EQ_VMA)
    SECTION_init (ram, ALIGN (0x4), LMA_EQ_VMA)
    SECTION_text (ram, ALIGN (0x4), LMA_EQ_VMA)
    SECTION_fini (ram, ALIGN (0x4), LMA_EQ_VMA)
    SECTION_rodata (ram, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_rodata1 (ram, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_data (ram, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_data1 (ram, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_eh_frame (ram, ALIGN (0x4), LMA_EQ_VMA)
    SECTION_gcc_except_table (ram, ALIGN (0x4), LMA_EQ_VMA)
    SECTION_ctors (ram, ALIGN (0x4), LMA_EQ_VMA)
    SECTION_dtors (ram, ALIGN (0x4), LMA_EQ_VMA)
    SECTION_devtab (ram, ALIGN (0x4), LMA_EQ_VMA)
    SECTION_got (ram, ALIGN (0x4), LMA_EQ_VMA)
    SECTION_dynamic (ram, ALIGN (0x4), LMA_EQ_VMA)
    SECTION_sdata (ram, ALIGN (0x4), LMA_EQ_VMA)
    SECTION_lit8 (ram, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_lit4 (ram, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_sbss (ram, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_bss (ram, ALIGN (0x8), LMA_EQ_VMA)
    CYG_LABEL_DEFN(__heap1) = ALIGN (0x8);
#ifdef BCM_ROBO_SUPPORT
    .ramfsdata (0xA0000000|(RAM_SIZE-0x20000)):
#else
    .ramfsdata 0xA0001000:
#endif
    {
      __ramfsdata_start = .; 
      *(.ramfsdata)
      __ramfsdata_end = .; 
    } > ramfs
    SECTIONS_END
}
